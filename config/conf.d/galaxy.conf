server {
   listen       80;
   server_name  synbiocad.micalis.inra.fr galaxy-synbiocad.org;

   access_log /var/log/nginx/galaxy.access.log;

   location /.well-known/acme-challenge/ {
        root /var/www/certbot;
   }

   location / {
        return 301 https://$host$request_uri;
   }

#   rewrite ^ https://$http_host$request_uri? permanent;    # force redirect http to https
}

server {
    listen 443 ssl;
    listen [::]:443;
    server_name galaxy-synbiocad.org;

    # use a variable for convenience
    set $GALAXY_ROOT /galaxy;

    client_max_body_size 10G;

    # Enable HSTS
    add_header Strict-Transport-Security "max-age=15552000; includeSubdomains";

    access_log            /var/log/nginx/galaxy.access.log;


    # cert/key
    ssl_certificate /etc/letsencrypt/live/galaxy-synbiocad.org/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/galaxy-synbiocad.org/privkey.pem;


   location / {

#    # Load-Balancing
#     proxy_pass http://galaxy_app;

     # To know other containers afterward
     resolver 127.0.0.11 ipv6=off;
     set $galaxy http://galaxy-prod;
     proxy_pass $galaxy;
     proxy_set_header X-Forwarded-Host $host;
     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
     proxy_set_header X-URL-SCHEME https;

   }

   error_page 501 502 504 /500.html;
   location ~ ^/500.html {
           root   /var/www/error;
   }

   error_page 503 @maintenance;
   location @maintenance {
      rewrite ^(.*)$ /var/www/error/galaxy_offline.html break;
   }

}

server {
    listen 443 ssl;
    listen [::]:443;
    server_name synbiocad.micalis.inra.fr;

    # use a variable for convenience
    set $GALAXY_ROOT /galaxy;

    client_max_body_size 10G;

    # Enable HSTS
    add_header Strict-Transport-Security "max-age=15552000; includeSubdomains";

    access_log            /var/log/nginx/galaxy.access.log;


    # cert/key
    ssl_certificate /etc/letsencrypt/live/synbiocad.micalis.inra.fr/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/synbiocad.micalis.inra.fr/privkey.pem;

    location = / {
       return 301 /mssb;
   }

   location /dev {

#    # Load-Balancing
#     proxy_pass http://galaxy_app;

     # To know other containers afterward
     resolver 127.0.0.11 ipv6=off;
     set $galaxy http://galaxy-dev:8080;
     proxy_pass $galaxy;
     proxy_set_header X-Forwarded-Host $host;
     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
     proxy_set_header X-URL-SCHEME https;

   }
   location /prod {

#    # Load-Balancing
#     proxy_pass http://galaxy_app;

     # To know other containers afterward
     resolver 127.0.0.11 ipv6=off;
     set $galaxy http://galaxy-prod:8080;
     proxy_pass $galaxy;
     proxy_set_header X-Forwarded-Host $host;
     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
     proxy_set_header X-URL-SCHEME https;

   }

   location /test {

#    # Load-Balancing
#     proxy_pass http://galaxy_app;

     # To know other containers afterward
     resolver 127.0.0.11 ipv6=off;
     set $galaxy http://galaxy-test:8080;
     proxy_pass $galaxy;
     proxy_set_header X-Forwarded-Host $host;
     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
     proxy_set_header X-URL-SCHEME https;

   }

   location /mssb {

#    # Load-Balancing
#     proxy_pass http://galaxy_app;

     # To know other containers afterward
     resolver 127.0.0.11 ipv6=off;
     set $galaxy http://galaxy-mssb:8080;
     proxy_pass $galaxy;
     proxy_set_header X-Forwarded-Host $host;
     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
     proxy_set_header X-URL-SCHEME https;

   }

   error_page 501 502 504 /500.html;
   location ~ ^/(dev|prod|test|mssb)/500.html {
#   location /dev/500.html {
           root   /var/www/error;
   }

   # redirect /prefix -> /prefix/
   rewrite ^/dev$ /dev/ last;
   rewrite ^/prod$ /prod/ last;
   rewrite ^/test$ /test/ last;
   rewrite ^/mssb$ /mssb/ last;

   error_page 503 @maintenance;
   location @maintenance {
      rewrite ^(.*)$ /var/www/error/galaxy_offline.html break;
   }

#   # handle file uploads via the upload module
#   location /_upload {
#	upload_store $GALAXY_ROOT/upload_store;
#	upload_store_access user:rw group:rw;
#	upload_pass_form_field "";
#	upload_set_form_field "__${upload_field_name}__is_composite" "true";
#	upload_set_form_field "__${upload_field_name}__keys" "name path";
#	upload_set_form_field "${upload_field_name}_name" "$upload_file_name";
#	upload_set_form_field "${upload_field_name}_path" "$upload_tmp_path";
#	upload_pass_args on;
#	upload_pass /_upload_done;
#   }
#
#   # once upload is complete, redirect to the proper galaxy path
#   location /_upload_done {
#       set $dst /api/tools;
#       if ($args ~ nginx_redir=([^&]+)) {
#           set $dst $1;
#       }
#       rewrite "" $dst;
#   }

#   # serve static content for visualization and interactive environment plugins
#   location ~ ^/dev/plugins/(?<plug_type>.+?)/(?<vis_name>.+?)/static/(?<static_file>.*?)$ {
#       alias $GALAXY_ROOT/config/plugins/$plug_type/$vis_name/static/$static_file;
#   }
#
#   location /dev/static {
#       alias $GALAXY_ROOT/static;
#       expires 24h;
#   }
#   location /dev/static/style {
#       alias $GALAXY_ROOT/static/style/blue;
#       expires 24h;
#   }
#   location /dev/static/scripts {
#       alias $GALAXY_ROOT/static/scripts;
#   }
#   location /dev/favicon.ico {
#       alias $GALAXY_ROOT/static/favicon.ico;
#   }
#   location /dev/robots.txt {
#       alias $GALAXY_ROOT/static/robots.txt;
#   }
#
#   location /dev/_x_accel_redirect/ {
#       internal;
#       alias /;
#   }

}
