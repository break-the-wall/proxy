user  nginx;
worker_processes  1;

error_log  /var/log/nginx/error.log warn;
#error_log  syslog:server=rsyslog.docker:514 warn;
pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;
#    access_log  syslog:server=rsyslog.docker:514 main;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;


    include /etc/nginx/conf.d/*.conf;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparam.pem;

    #proxy_redirect          off;
    #proxy_set_header        Host            $host;
    #proxy_set_header        X-Real-IP       $remote_addr;
    #proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
    #client_max_body_size    10m;
    #client_body_buffer_size 128k;
    #proxy_connect_timeout   90;
    #proxy_send_timeout      90;
    #proxy_read_timeout      90;
    proxy_buffers 16 16k;
    proxy_buffer_size 16k;

    # compress responses whenever possible
    gzip on;
    gzip_http_version 1.1;
    gzip_vary on;
    gzip_comp_level 6;
    gzip_proxied any;
    gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;
    gzip_buffers 16 8k;

    # allow up to 3 minutes for Galaxy to respond to slow requests before timing out
    uwsgi_read_timeout 180;

    # allowable SSL protocols
#    ssl_protocols TLSv1.1 TLSv1.2;

    # use secure ciphers
#    ssl_ciphers HIGH:!aNULL:!eNULL:!EXPORT:!CAMELLIA:!DES:!MD5:!PSK:!RC4;
#    ssl_prefer_server_ciphers on;

    # enable session reuse
    ssl_session_cache shared:SSL:8m;
#    ssl_session_timeout 5m;

#    # cert/key
#    ssl_certificate /CERTS/galaxy/localhost.crt;
#    ssl_certificate_key /CERTS/galaxy/localhost.key;

#    # Load-Balacing
#    upstream galaxy_app {
#        server galaxy:8080;
#    }
#    proxy_next_upstream off;

#    server {
#        listen       80 default_server;
#        listen       [::]:80 default_server;
#        server_name  _;
#
#        location / {
#             return 301 https://$host$request_uri;
#        }
#    }


}
